<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <atom:link href="https://x.com/geoffreylitt/rss" rel="self" type="application/rss+xml" />
    <title>Geoffrey Litt / @geoffreylitt</title>
    <link>https://x.com/geoffreylitt</link>
    <description>Twitter feed for: @geoffreylitt. Generated by nitter.privacydev.net
</description>
    <language>en-us</language>
    <ttl>40</ttl>
    <image>
      <title>Geoffrey Litt / @geoffreylitt</title>
      <link>https://x.com/geoffreylitt</link>
      <url>https://x.com/pic/pbs.twimg.com%2Fprofile_images%2F722626068293763072%2F4erM-SPN_400x400.jpg</url>
      <width>128</width>
      <height>128</height>
    </image>
      <item>
        <title>R to @geoffreylitt: notably i was still pretty involved in the details here - decided the strategy, reviewed the plan, reviewed the code... and yet, still probably saved me at least 15min, maybe more? 

i love staying in the flow of UI ideas and not needing to activate math brain</title>
        <dc:creator>@geoffreylitt</dc:creator>
        <description><![CDATA[<p>notably i was still pretty involved in the details here - decided the strategy, reviewed the plan, reviewed the code... and yet, still probably saved me at least 15min, maybe more? <br>
<br>
i love staying in the flow of UI ideas and not needing to activate math brain</p>]]></description>
        <pubDate>Tue, 11 Feb 2025 18:12:55 GMT</pubDate>
        <guid>https://x.com/geoffreylitt/status/1889377090148958602#m</guid>
        <link>https://x.com/geoffreylitt/status/1889377090148958602#m</link>
      </item>
      <item>
        <title>R to @geoffreylitt: still learning how to use reasoning models, but i tried to give a good set of constraints on the answer here, and also made sure to agree on a plan before coding. (helped me catch a possible bug ahead of time!)</title>
        <dc:creator>@geoffreylitt</dc:creator>
        <description><![CDATA[<p>still learning how to use reasoning models, but i tried to give a good set of constraints on the answer here, and also made sure to agree on a plan before coding. (helped me catch a possible bug ahead of time!)</p>
<img src="https://x.com/pic/media%2FGjhpR4HXAAEvrFU.jpg" style="max-width:250px;" />
<img src="https://x.com/pic/media%2FGjhpTN0WQAAR_Za.jpg" style="max-width:250px;" />]]></description>
        <pubDate>Tue, 11 Feb 2025 18:08:35 GMT</pubDate>
        <guid>https://x.com/geoffreylitt/status/1889375997713416359#m</guid>
        <link>https://x.com/geoffreylitt/status/1889375997713416359#m</link>
      </item>
      <item>
        <title>a tiny example of how AI speeds up UI prototyping:

just used cursor composer + o3-mini to speed up a huge table with virtualized rendering. took a couple mins, worked on first try.

no detour into math puzzles, no searching for a library. keeps me in flow!</title>
        <dc:creator>@geoffreylitt</dc:creator>
        <description><![CDATA[<p>a tiny example of how AI speeds up UI prototyping:<br>
<br>
just used cursor composer + o3-mini to speed up a huge table with virtualized rendering. took a couple mins, worked on first try.<br>
<br>
no detour into math puzzles, no searching for a library. keeps me in flow!</p>]]></description>
        <pubDate>Tue, 11 Feb 2025 18:07:40 GMT</pubDate>
        <guid>https://x.com/geoffreylitt/status/1889375768632856778#m</guid>
        <link>https://x.com/geoffreylitt/status/1889375768632856778#m</link>
      </item>
      <item>
        <title>R to @geoffreylitt: when you&apos;re tired after a work day, it really helps to have tasks broken down like this:</title>
        <dc:creator>@geoffreylitt</dc:creator>
        <description><![CDATA[<p>when you're tired after a work day, it really helps to have tasks broken down like this:</p>
<img src="https://x.com/pic/media%2FGjeau4EXgAA2wMs.jpg" style="max-width:250px;" />]]></description>
        <pubDate>Tue, 11 Feb 2025 03:05:49 GMT</pubDate>
        <guid>https://x.com/geoffreylitt/status/1889148811127173308#m</guid>
        <link>https://x.com/geoffreylitt/status/1889148811127173308#m</link>
      </item>
      <item>
        <title>pro tip: Claude Projects as executive function assistance

i&apos;m dealing with an international bureaucracy thing that&apos;s gonna take months... tedious but has to get done

so i made a Project with docs explaining the process, now Claude tells me exactly what to do next and helps me do it faster ðŸ˜Ž</title>
        <dc:creator>@geoffreylitt</dc:creator>
        <description><![CDATA[<p>pro tip: Claude Projects as executive function assistance<br>
<br>
i'm dealing with an international bureaucracy thing that's gonna take months... tedious but has to get done<br>
<br>
so i made a Project with docs explaining the process, now Claude tells me exactly what to do next and helps me do it faster ðŸ˜Ž</p>]]></description>
        <pubDate>Tue, 11 Feb 2025 03:02:34 GMT</pubDate>
        <guid>https://x.com/geoffreylitt/status/1889147993284043181#m</guid>
        <link>https://x.com/geoffreylitt/status/1889147993284043181#m</link>
      </item>
      <item>
        <title>something i&apos;ve been hacking on w/ @alexwarth!</title>
        <dc:creator>@geoffreylitt</dc:creator>
        <description><![CDATA[<p>something i've been hacking on w/ <a href="https://x.com/alexwarth" title="Alex Warth">@alexwarth</a>!</p>
<p><a href="https://x.com/alexwarth/status/1886915048309973164#m">nitter.privacydev.net/alexwarth/status/1886915048309973164#m</a></p>]]></description>
        <pubDate>Tue, 04 Feb 2025 23:24:58 GMT</pubDate>
        <guid>https://x.com/geoffreylitt/status/1886918903659442377#m</guid>
        <link>https://x.com/geoffreylitt/status/1886918903659442377#m</link>
      </item>
      <item>
        <title># the shift from buying apps -&gt; malleable software

It&apos;s riveting seeing how fast the &quot;build vs buy&quot; tradeoff is shifting in software.

This is a perfect example from @random_walker: he built a little reading app with ChatGPT, rather than trying to find an existing one.
https://x.com/random_walker/status/1883344558618190176

As he points out in the quoted thread: because most educational apps are terrible, it&apos;s actually faster to just make your own good one with AI!

I&apos;ve had lots of similar experiences recently. For example, it was faster to build a custom workout app for myself with Claude than to find one from the endless sea of workout apps in the App Store...
https://x.com/geoffreylitt/status/1875213046366511516

No nonsense, just exactly what I needed. And it&apos;s malleable: I can iterate further at any time when I hit new needs.

This reminds me of how sometimes it&apos;s actually faster to cook a good meal for yourself than to order takeout. None of the menu items on UberEats quite match what you&apos;re craving... so just make it yourself!

Of course, the issue with DIY (whether cooking or software) is that sometimes we don&apos;t have the time. But when the time to DIY suddenly comes down by 10x or more, the tradeoffs look very different. As @simonw says, &quot;AI-enhanced development makes me more ambitious with my projects.&quot;

Building custom software doesn&apos;t work all the timeâ€”I&apos;m not gonna whip up a good text editor or drawing app in 5 minutes with AI. There is still lots of value in professionally built, well crafted apps in many cases.

But! for narrowly focused apps targeted at a particular personal use case - cooking, workouts, learning - the tradeoffs are shifting fast. The value of personalization is immense, and usually I don&apos;t need anything that fancy.

The thing is... I&apos;m pretty sure the longterm endgame here is not little micro-apps running inside a ChatGPT or Claude window, while the rest of our OS stays unchanged. There&apos;s a bigger change lurking...

To me that&apos;s the big exciting challenge of malleable software - how will we reimagine the ideas of &quot;apps&quot; and &quot;app stores&quot; to accommodate this new reality, where people can whip up new software in minutes?</title>
        <dc:creator>@geoffreylitt</dc:creator>
        <description><![CDATA[<p># the shift from buying apps -&gt; malleable software<br>
<br>
It's riveting seeing how fast the "build vs buy" tradeoff is shifting in software.<br>
<br>
This is a perfect example from <a href="https://x.com/random_walker" title="Arvind Narayanan">@random_walker</a>: he built a little reading app with ChatGPT, rather than trying to find an existing one.<br>
<a href="https://x.com/random_walker/status/1883344558618190176">x.com/random_walker/status/1â€¦</a><br>
<br>
As he points out in the quoted thread: because most educational apps are terrible, it's actually faster to just make your own good one with AI!<br>
<br>
I've had lots of similar experiences recently. For example, it was faster to build a custom workout app for myself with Claude than to find one from the endless sea of workout apps in the App Store...<br>
<a href="https://x.com/geoffreylitt/status/1875213046366511516">x.com/geoffreylitt/status/18â€¦</a><br>
<br>
No nonsense, just exactly what I needed. And it's malleable: I can iterate further at any time when I hit new needs.<br>
<br>
This reminds me of how sometimes it's actually faster to cook a good meal for yourself than to order takeout. None of the menu items on UberEats quite match what you're craving... so just make it yourself!<br>
<br>
Of course, the issue with DIY (whether cooking or software) is that sometimes we don't have the time. But when the time to DIY suddenly comes down by 10x or more, the tradeoffs look very different. As <a href="https://x.com/simonw" title="Simon Willison">@simonw</a> says, "AI-enhanced development makes me more ambitious with my projects."<br>
<br>
Building custom software doesn't work all the timeâ€”I'm not gonna whip up a good text editor or drawing app in 5 minutes with AI. There is still lots of value in professionally built, well crafted apps in many cases.<br>
<br>
But! for narrowly focused apps targeted at a particular personal use case - cooking, workouts, learning - the tradeoffs are shifting fast. The value of personalization is immense, and usually I don't need anything that fancy.<br>
<br>
The thing is... I'm pretty sure the longterm endgame here is not little micro-apps running inside a ChatGPT or Claude window, while the rest of our OS stays unchanged. There's a bigger change lurking...<br>
<br>
To me that's the big exciting challenge of malleable software - how will we reimagine the ideas of "apps" and "app stores" to accommodate this new reality, where people can whip up new software in minutes?</p>]]></description>
        <pubDate>Sun, 26 Jan 2025 17:34:23 GMT</pubDate>
        <guid>https://x.com/geoffreylitt/status/1883569187182047262#m</guid>
        <link>https://x.com/geoffreylitt/status/1883569187182047262#m</link>
      </item>
      <item>
        <title>R to @geoffreylitt: Next newsletter is going out in a couple weeks and should have some fun stuff in it ðŸ¤“</title>
        <dc:creator>@geoffreylitt</dc:creator>
        <description><![CDATA[<p>Next newsletter is going out in a couple weeks and should have some fun stuff in it ðŸ¤“</p>]]></description>
        <pubDate>Wed, 22 Jan 2025 20:06:51 GMT</pubDate>
        <guid>https://x.com/geoffreylitt/status/1882158004675698849#m</guid>
        <link>https://x.com/geoffreylitt/status/1882158004675698849#m</link>
      </item>
      <item>
        <title>We&apos;re now sending out monthly email newsletters at &gt;@inkandswitch -- sign up at the bottom of the lab website if you wanna follow along!</title>
        <dc:creator>@geoffreylitt</dc:creator>
        <description><![CDATA[<p>We're now sending out monthly email newsletters at <a href="https://x.com/inkandswitch" title="Ink & Switch">@inkandswitch</a> -- sign up at the bottom of the lab website if you wanna follow along!</p>
<p><a href="https://x.com/inkandswitch/status/1882156324236198272#m">nitter.privacydev.net/inkandswitch/status/1882156324236198272#m</a></p>
<img src="https://x.com/pic/media%2FGh7Ebz5WsAAPhAw.png" style="max-width:250px;" />]]></description>
        <pubDate>Wed, 22 Jan 2025 20:05:45 GMT</pubDate>
        <guid>https://x.com/geoffreylitt/status/1882157726715072897#m</guid>
        <link>https://x.com/geoffreylitt/status/1882157726715072897#m</link>
      </item>
      <item>
        <title>R to @geoffreylitt: Alright, back to building for now --

we&apos;re thinking of writing up some of this malleable software vision soon, would be curious what questions/topics you&apos;d want to see covered in such a piece!</title>
        <dc:creator>@geoffreylitt</dc:creator>
        <description><![CDATA[<p>Alright, back to building for now --<br>
<br>
we're thinking of writing up some of this malleable software vision soon, would be curious what questions/topics you'd want to see covered in such a piece!</p>]]></description>
        <pubDate>Wed, 15 Jan 2025 16:34:42 GMT</pubDate>
        <guid>https://x.com/geoffreylitt/status/1879567899901530535#m</guid>
        <link>https://x.com/geoffreylitt/status/1879567899901530535#m</link>
      </item>
      <item>
        <title>R to @geoffreylitt: We&apos;re building a malleable software environment called Patchwork that weaves together all these hunches.

It&apos;s a web-based tool where you can edit all kinds of docs with your team... and you can edit the tools too.

Excited to share more about this soon.</title>
        <dc:creator>@geoffreylitt</dc:creator>
        <description><![CDATA[<p>We're building a malleable software environment called Patchwork that weaves together all these hunches.<br>
<br>
It's a web-based tool where you can edit all kinds of docs with your team... and you can edit the tools too.<br>
<br>
Excited to share more about this soon.</p>]]></description>
        <pubDate>Wed, 15 Jan 2025 16:34:08 GMT</pubDate>
        <guid>https://x.com/geoffreylitt/status/1879567755550318810#m</guid>
        <link>https://x.com/geoffreylitt/status/1879567755550318810#m</link>
      </item>
      <item>
        <title>R to @geoffreylitt: 3) Shared data

When every app manages its own data, it&apos;s hard for your tools to work together and coordinate.

We need a &quot;next-gen filesystem&quot; for the modern web: a place to put our stuff so that all our tools can share info and context.</title>
        <dc:creator>@geoffreylitt</dc:creator>
        <description><![CDATA[<p>3) Shared data<br>
<br>
When every app manages its own data, it's hard for your tools to work together and coordinate.<br>
<br>
We need a "next-gen filesystem" for the modern web: a place to put our stuff so that all our tools can share info and context.</p>
<p><a href="https://x.com/geoffreylitt/status/1810442615264796864#m">nitter.privacydev.net/geoffreylitt/status/1810442615264796864#m</a></p>]]></description>
        <pubDate>Wed, 15 Jan 2025 16:30:27 GMT</pubDate>
        <guid>https://x.com/geoffreylitt/status/1879566828944642457#m</guid>
        <link>https://x.com/geoffreylitt/status/1879566828944642457#m</link>
      </item>
      <item>
        <title>R to @geoffreylitt: 2) Version control

Every dev knows the value of version control. It matters even more in malleable software, when every user is making tweaks.

Unfortunately, git is complicated. So we need to invent simple version control that everyone can use...</title>
        <dc:creator>@geoffreylitt</dc:creator>
        <description><![CDATA[<p>2) Version control<br>
<br>
Every dev knows the value of version control. It matters even more in malleable software, when every user is making tweaks.<br>
<br>
Unfortunately, git is complicated. So we need to invent simple version control that everyone can use...</p>
<p><a href="https://x.com/geoffreylitt/status/1825923322518884448#m">nitter.privacydev.net/geoffreylitt/status/1825923322518884448#m</a></p>]]></description>
        <pubDate>Wed, 15 Jan 2025 16:28:09 GMT</pubDate>
        <guid>https://x.com/geoffreylitt/status/1879566250839552067#m</guid>
        <link>https://x.com/geoffreylitt/status/1879566250839552067#m</link>
      </item>
      <item>
        <title>R to @geoffreylitt: 3 hunches we&apos;ve been developing as we work:

1) Dynamic documents. The best starting point for many problems is to jot down some notes. Then you *gradually* enrich that note with computation as needed... until it becomes a little tool just for you.</title>
        <dc:creator>@geoffreylitt</dc:creator>
        <description><![CDATA[<p>3 hunches we've been developing as we work:<br>
<br>
1) Dynamic documents. The best starting point for many problems is to jot down some notes. Then you *gradually* enrich that note with computation as needed... until it becomes a little tool just for you.</p>
<p><a href="https://x.com/geoffreylitt/status/1727043882524037502#m">nitter.privacydev.net/geoffreylitt/status/1727043882524037502#m</a></p>]]></description>
        <pubDate>Wed, 15 Jan 2025 16:26:13 GMT</pubDate>
        <guid>https://x.com/geoffreylitt/status/1879565765743124945#m</guid>
        <link>https://x.com/geoffreylitt/status/1879565765743124945#m</link>
      </item>
      <item>
        <title>R to @geoffreylitt: That&apos;s the vision of &quot;malleable software&quot; that we&apos;re pursuing at &gt;@inkandswitch -- rethinking the OS from the ground up, with the assumption that everyone is a creator.

It&apos;s a big scope: we need to unbundle the app metaphor, rip apart tools from their underlying data, make it 10x lighter to deploy collaborative software, and allow everyone to actually own their tools so they have the right to change them.</title>
        <dc:creator>@geoffreylitt</dc:creator>
        <description><![CDATA[<p>That's the vision of "malleable software" that we're pursuing at <a href="https://x.com/inkandswitch" title="Ink & Switch">@inkandswitch</a> -- rethinking the OS from the ground up, with the assumption that everyone is a creator.<br>
<br>
It's a big scope: we need to unbundle the app metaphor, rip apart tools from their underlying data, make it 10x lighter to deploy collaborative software, and allow everyone to actually own their tools so they have the right to change them.</p>]]></description>
        <pubDate>Wed, 15 Jan 2025 16:23:28 GMT</pubDate>
        <guid>https://x.com/geoffreylitt/status/1879565070499279340#m</guid>
        <link>https://x.com/geoffreylitt/status/1879565070499279340#m</link>
      </item>
      <item>
        <title>R to @geoffreylitt: There are many tools popping up that empower regular people to do more with AI codegen.

I&apos;m a big fan...but I think we can push so much further!

The future is not merely &quot;make me an app&quot;.

it&apos;s &quot;no more apps&quot;; a new OS where you casually build/mod software every day.</title>
        <dc:creator>@geoffreylitt</dc:creator>
        <description><![CDATA[<p>There are many tools popping up that empower regular people to do more with AI codegen.<br>
<br>
I'm a big fan...but I think we can push so much further!<br>
<br>
The future is not merely "make me an app".<br>
<br>
it's "no more apps"; a new OS where you casually build/mod software every day.</p>]]></description>
        <pubDate>Wed, 15 Jan 2025 16:20:15 GMT</pubDate>
        <guid>https://x.com/geoffreylitt/status/1879564262357803153#m</guid>
        <link>https://x.com/geoffreylitt/status/1879564262357803153#m</link>
      </item>
      <item>
        <title>R to @geoffreylitt: The typical dev workflow for the app world is so damn heavy: PMs juggling the needs of millions, engineers carefully scaling and QAing...

We&apos;ll want far lighter tools when building for just ourselves or just our teams. More like spreadsheets than &quot;app dev&quot;.</title>
        <dc:creator>@geoffreylitt</dc:creator>
        <description><![CDATA[<p>The typical dev workflow for the app world is so damn heavy: PMs juggling the needs of millions, engineers carefully scaling and QAing...<br>
<br>
We'll want far lighter tools when building for just ourselves or just our teams. More like spreadsheets than "app dev".</p>]]></description>
        <pubDate>Wed, 15 Jan 2025 16:16:40 GMT</pubDate>
        <guid>https://x.com/geoffreylitt/status/1879563359546437897#m</guid>
        <link>https://x.com/geoffreylitt/status/1879563359546437897#m</link>
      </item>
      <item>
        <title>R to @geoffreylitt: The idea of an &quot;app&quot;â€”a hermetically sealed bundle of functionality built by a team trying to anticipate your needsâ€”will no longer be as relevant.

We&apos;ll want looser clusters, amenable to change at the edges. Everyone owns their tools, rather than all of us renting cloned ones.</title>
        <dc:creator>@geoffreylitt</dc:creator>
        <description><![CDATA[<p>The idea of an "app"â€”a hermetically sealed bundle of functionality built by a team trying to anticipate your needsâ€”will no longer be as relevant.<br>
<br>
We'll want looser clusters, amenable to change at the edges. Everyone owns their tools, rather than all of us renting cloned ones.</p>]]></description>
        <pubDate>Wed, 15 Jan 2025 16:13:31 GMT</pubDate>
        <guid>https://x.com/geoffreylitt/status/1879562569989628001#m</guid>
        <link>https://x.com/geoffreylitt/status/1879562569989628001#m</link>
      </item>
      <item>
        <title>R to @geoffreylitt: Today&apos;s software ecosystem evolved around a central assumption that code is expensive, so it makes sense to centrally develop and then distribute at low marginal cost.

If code becomes 100x cheaper, the choices no longer make sense! Build-buy tradeoffs often flip.</title>
        <dc:creator>@geoffreylitt</dc:creator>
        <description><![CDATA[<p>Today's software ecosystem evolved around a central assumption that code is expensive, so it makes sense to centrally develop and then distribute at low marginal cost.<br>
<br>
If code becomes 100x cheaper, the choices no longer make sense! Build-buy tradeoffs often flip.</p>]]></description>
        <pubDate>Wed, 15 Jan 2025 16:11:03 GMT</pubDate>
        <guid>https://x.com/geoffreylitt/status/1879561947299115433#m</guid>
        <link>https://x.com/geoffreylitt/status/1879561947299115433#m</link>
      </item>
      <item>
        <title>Regular people using AI code generation in today&apos;s software world is like showing up to your rented apartment with a construction crew.

We all have increasing capability, but what are we allowed to do with it?</title>
        <dc:creator>@geoffreylitt</dc:creator>
        <description><![CDATA[<p>Regular people using AI code generation in today's software world is like showing up to your rented apartment with a construction crew.<br>
<br>
We all have increasing capability, but what are we allowed to do with it?</p>]]></description>
        <pubDate>Wed, 15 Jan 2025 16:09:12 GMT</pubDate>
        <guid>https://x.com/geoffreylitt/status/1879561481022529667#m</guid>
        <link>https://x.com/geoffreylitt/status/1879561481022529667#m</link>
      </item>

  </channel>
</rss>
